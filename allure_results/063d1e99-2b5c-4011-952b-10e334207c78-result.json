{"name": "При нажатии на кнопку Отмена окно завершения заказа закрывается", "status": "skipped", "statusDetails": {"message": "XFAIL Кнопка Отменить не работает, заведен баг\n\nselenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.test_finish_order_taxi_panel.TestFinishOrderTaxiPanel object at 0x0000014A67B99E00>\ndriver_open_finish_order_taxi_panel = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ff9019305d7c6d8a1806f5c8bf44b8ea\")>, '176')\n\n    @pytest.mark.xfail(reason=\"Кнопка Отменить не работает, заведен баг\")\n    @allure.title(\"При нажатии на кнопку Отмена окно завершения заказа закрывается\")\n    def test_click_return_button_open_closed_finish_order_panel(self, driver_open_finish_order_taxi_panel):\n        finish_panel_driver, _ = driver_open_finish_order_taxi_panel\n        page = FinishOrderTaxiPanel(finish_panel_driver)\n        page.click_on_return_button()\n>       assert page.is_car_picture_invisible()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\test_finish_order_taxi_panel.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\finish_order_taxi_panel.py:17: in is_car_picture_invisible\n    return self.is_element_invisible(locators.FINISH_ORDER_TAXI_PICTURE_LOCATOR)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npages\\base_page.py:56: in is_element_invisible\n    WebDriverWait(self.driver, 10).until(expected_conditions.invisibility_of_element(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ff9019305d7c6d8a1806f5c8bf44b8ea\")>, method = <function invisibility_of_element_located.<locals>._predicate at 0x0000014A67CB11C0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "steps": [{"name": "Кликаем на кнопку Отменить", "status": "passed", "start": 1751932711710, "stop": 1751932711749}, {"name": "Проверяем, что картинка с машиной не отображается", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\Users\\karin\\PycharmProjects\\Sprint_n\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\karin\\PycharmProjects\\Sprint_n\\pages\\finish_order_taxi_panel.py\", line 17, in is_car_picture_invisible\n    return self.is_element_invisible(locators.FINISH_ORDER_TAXI_PICTURE_LOCATOR)\n           ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\karin\\PycharmProjects\\Sprint_n\\pages\\base_page.py\", line 56, in is_element_invisible\n    WebDriverWait(self.driver, 10).until(expected_conditions.invisibility_of_element(locator))\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\karin\\PycharmProjects\\Sprint_n\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 138, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1751932711749, "stop": 1751932721915}], "start": 1751932711710, "stop": 1751932721917, "uuid": "2cacca78-0c2a-4a60-b122-504b99e76074", "historyId": "7c59068ad71980f177ad065a143c3492", "testCaseId": "7c59068ad71980f177ad065a143c3492", "fullName": "tests.test_finish_order_taxi_panel.TestFinishOrderTaxiPanel#test_click_return_button_open_closed_finish_order_panel", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_finish_order_taxi_panel"}, {"name": "subSuite", "value": "TestFinishOrderTaxiPanel"}, {"name": "host", "value": "Rumata"}, {"name": "thread", "value": "23760-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_finish_order_taxi_panel"}]}